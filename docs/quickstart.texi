@node Quickstart
@section Quickstart

For the impatient, this section presents the minimum you need to know
to install software from the guildhall.

@subheading Configuration

So, you've successfully installed Guildhall, and were able to get the help
message via @command{guild config --help}? Then it's time to tell
Guildhall where it can find software (@pxref{Packages}) to install. Create
the file @file{~/.config/guildhall/config.scm} and add this line:

@lisp
(repository shift-reset "http://shift-reset.com/doro/")
@end lisp

This tells Guildhall the location of the Andreas Rottmann's
experimental repository, and gives it the name
@samp{experimental}. You could add further repositories with different
names and locations, and Guildhall will consider them all when
installing packages.

@subheading Updating the package database

This is all configuration that is needed; if you now run
@command{guild update}, you should see something like the following:

@verbatim
$ guild update
Fetching http://rotty.yi.org/doro/experimental/available.scm
Loading available information for repository `experimental'
@end verbatim

Now you have obtained the information of available packages from the
hall. You can verify that by running @command{guild list-packages
--all}, which should produce output resembling the following:

@verbatim
u conjure                    0-20091204
u dorodango                  0-20091204
u fidfw                      0-20091204
...
@end verbatim

The rightmost columns indicates the package state (@samp{u} means
"uninstalled"), the other columns are the package name and version.

@subheading Installing software

You can now install any of the listed packages, using @command{guild
install @var{package-name}}:

@verbatim
% guild install spells
The following NEW packages will be installed:
  spells srfi{a}
Do you want to continue? [Y/n] 
Fetching http://rotty.yi.org/doro/experimental/srfi_0-20091204.zip
Installing srfi (0-20091204) ...
Fetching http://rotty.yi.org/doro/experimental/spells_0-20091204.zip
Installing spells (0-20091204) ...
@end verbatim

As demonstrated in the above listing, Guildhall knows that the package
@samp{spells} depends on @samp{srfi}, and will automatically install
that package as well.

@subheading Other important commands

Now you you know how to achieve the primary task of Guildhall: installing
software.  There are a few other things you probably want to do at
times:

@table @command
@item guild upgrade
Attempts to upgrade each package to the newest available version.

@item guild remove
Allows you to remove packages from your system.
@end table

@subheading Getting help

For each command, you can invoke @command{guild help @var{command}},
and it will show you what options and argument that command requires:

@verbatim
% guild help remove
Usage: guild remove PACKAGE...
Remove installed packages.

Options:
      --no-depends     Ignore dependencies.

  -c, --config=FILE    Use configuration file FILE, instead of the
                       default.
      --no-config      Do not read a configuration file.
      --help           Print this help message.
      --version        Print version information.
@end verbatim
